---

services:

  lldap:
    image: lldap/lldap:latest
    container_name: lldap
    restart: unless-stopped
    networks:
      - network
    security_opt:
      - 'no-new-privileges=true'
    ports:
      - "17170:17170"
    volumes:
      - ./bootstrap:/bootstrap/
      - ./bootstrap/bootstrap.sh:/app/bootstrap.sh
    environment:
      verbose: true
      TZ: ${TZ}
      UID: ${UID}
      GID: ${GID}
      LLDAP_LDAPS_OPTIONS__ENABLED: ${LLDAP_LDAPS_OPTIONS__ENABLED}
      LLDAP_DATABASE_URL: ${DB_ENGINE}://${DB_USER}:${DB_PASSWORD}@${DB_HOST}/${DB_NAME}
      LLDAP_LDAP_USER_PASS: ${LLDAP_LDAP_USER_PASS}
      LLDAP_LDAP_BASE_DN: ${LLDAP_LDAP_BASE_DN}
      LLDAP_JWT_SECRET: ${LLDAP_JWT_SECRET}
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:17170"]
      interval: 30s
      retries: 3

  db:
    image: postgres:17.2-alpine3.21
    container_name: lldap-postgres
    restart: unless-stopped
    networks:
      - network
    security_opt:
      - 'no-new-privileges=true'
    volumes:
      - pgsql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_NAME}'"]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  pgsql_data:
    name: pgsql_data_lldap

networks:
  network:
    name: lldap
    driver: bridge